@inject IApplicationUserService _appUserService
@inject IJSRuntime JSRuntime
@inject NavigationManager _navigationManager
@inject ILocalStorageService _localStorage
@inject IShoppingCartService _shoppingCartService
@implements IDisposable

<div class="navigation navigation-desktop">
    <div class="navigation-main__container">
        <div class="navigation-container" style="width: 5rem;">
            <div @onclick="NavigateToLinkedInAsync" class="image image-linkedin" />
        </div>
        <div class="navigation-container" style="width: 15rem;">
            <a href="/products/@SD.Section_AllProducts" class="navigation-container__link">Products</a>
            <a href="/products/@SD.Section_Kids" class="navigation-container__link">Kids</a>
        </div>

        <div class="navigation-container">
            <a href="/"><h4>trendora</h4></a>
        </div>
        <div class="navigation-container" style="width: 15rem;">
            <a href="/products/@SD.Section_Men" class="navigation-container__link">Men</a>
            <a href="/products/@SD.Section_Women" class="navigation-container__link">Women</a>
        </div>        
        <div class="navigation-container" style="width: 5rem;">
            <div class="tooltip-container image image-cart @(ItemsInCart > 0 ? "counter" : "")" value="@ItemsInCart" @onclick="NavigateToShoppingCart" />
            <div class="image image-user" @onclick="NavigateToUser" />
        </div>
    </div>
    <div class="navigation-container admin-container" style="width: 22rem;">
        <a href="/wardrobe" class="navigation-container-admin">Wardrobe</a>
        <a href="/create/tags" class="navigation-container-admin">Tags</a>
        <a href="/create/categories" class="navigation-container-admin">Categories</a>
        <a href="/create/collections" class="navigation-container-admin">Collections</a>
    </div>
</div>

<div class="navigation navigation-phones">
    <div class="navigation-phones__row-one">
        <div class="navigation-container">
            <a href="/" onclick="closeMobileMenu"><h4 class="title">trendora</h4></a>
        </div>
        <div class="hamburger-icon" onclick="toggleMobileMenu(this)">
            <div class="bar-1"></div>
            <div class="bar-2"></div>
            <div class="bar-3"></div>
            <ul class="mobile-menu">
                <li><a href="/products/@SD.Section_AllProducts">Products</a></li>
                <li><a href="/products/@SD.Section_Kids">Kids</a></li>
                <li><a href="/products/@SD.Section_Men">Men</a></li>
                <li><a href="/products/@SD.Section_Women">Women</a></li>
                <li><a href="/wardrobe">Wardrobe</a></li>
                <li><a href="/create/categories">Categories</a></li>
                <li><a href="/create/tags">Tags</a></li>
                <li><a href="/create/collections">Collections</a></li>
            </ul>
        </div>
        <div class="navigation-container">
            <div class="tooltip-container image image-cart @(ItemsInCart > 0 ? "counter-big" : "")" value="@ItemsInCart" @onclick="NavigateToShoppingCart"></div>
            <div class="image image-user" @onclick="NavigateToUser"></div>
        </div>
    </div>       
</div>

@if (!IsAdmin)
{
    <p class="no-admin-paragraph">*Admin role required for all functionalities of <b>Wardrobe, Tags, Categories and Collections</b></p>
}

@code {
    private int ItemsInCart { get; set; }
    private bool IsAdmin { get; set; }

    protected override async Task OnInitializedAsync()
    {
        IsAdmin = await _appUserService.IsUserAdmin();
        _shoppingCartService.OnCartChange += CartChangedEventHandler;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            ItemsInCart = await _shoppingCartService.GetNumberOfProductsInCart();
            StateHasChanged();
        }

    }

    private async void CartChangedEventHandler()
    {
        ItemsInCart = await _shoppingCartService.GetNumberOfProductsInCart();
        StateHasChanged();
    }

    public void Dispose()
    {
        _shoppingCartService.OnCartChange -= CartChangedEventHandler;
    }

    private void NavigateToShoppingCart()
    {        
        _navigationManager.NavigateTo("/ShoppingCart");
    }

    private void NavigateToUser()
    {
        _navigationManager.NavigateTo("/loginDisplay");
    }

    private void NavigateToWomenPage()
    {
        _navigationManager.NavigateTo("/loginDisplay");
    }

    private async Task NavigateToLinkedInAsync()
    {
        try
        {
            await JSRuntime.InvokeAsync<object>("open", "https://www.linkedin.com/in/mislav-bu%C4%8Dar-19740323b/", "_blank");
        }
        catch (Exception e)
        {
            
        }
    }
}
